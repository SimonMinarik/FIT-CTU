input {
	file {
		path => "/datasets/vgsales.csv"
		start_position => "beginning"
		type => "a"
	}
	file {
		path => "/datasets/result_dataset/part-00000-04279768-11af-44bc-b977-c057f4d06cef-c000.csv"
		start_position => "beginning"
		type => "b"
	}
}

filter {
		if [type] == "a"
		{
			csv {
				columns => ["Name", "Platform", "Year_of_Release", "Genre", "Publisher", "NA_Sales", "EU_Sales", "JP_Sales", "Other_Sales", "Global_Sales", "Critic_Score", "Critic_Count", "User_Score", "User_Count", "Developer", "Rating"]
				separator => ","
            }
				mutate {convert => ["Year_of_Release", "integer"]}
				mutate {convert => ["NA_Sales", "float"]}
				mutate {convert => ["EU_Sales", "float"]}
				mutate {convert => ["JP_Sales", "float"]}
				mutate {convert => ["Other_Sales", "float"]}
				mutate {convert => ["Global_Sales", "float"]}
				mutate {convert => ["Critic_Score", "integer"]}
				mutate {convert => ["Critic_Count", "integer"]}
				mutate {convert => ["User_Score", "float"]}
				mutate {convert => ["User_Count", "integer"]}
		}
		else if [type] == "b"
		{
			csv {
				columns => ["Platform", "Year_of_Release", "Platform_Global_Sales"]
				separator => ","
            }
				mutate {convert => ["Year_of_Release", "integer"]}
				mutate {convert => ["Platform_Global_Sales", "float"]}
		}
}


output {
	elasticsearch {
		hosts => "http://elasticsearch:9200"
		index => "steam"
	}
}
